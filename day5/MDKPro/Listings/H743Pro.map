Component: ARM Compiler 6.11 Tool: armlink [5d3b3900]

==============================================================================

Section Cross References

    startup_stm32h743xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h743xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h743xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h743xx.o(RESET) refers to startup_stm32h743xx.o(STACK) for __initial_sp
    startup_stm32h743xx.o(RESET) refers to startup_stm32h743xx.o(.text) for Reset_Handler
    startup_stm32h743xx.o(RESET) refers to lto-llvm-1128e5.o(.text) for NMI_Handler
    startup_stm32h743xx.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32h743xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32h743xx.o(.text) refers to lto-llvm-1128e5.o(.text) for SystemInit
    startup_stm32h743xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32h743xx.o(.text) refers to startup_stm32h743xx.o(HEAP) for Heap_Mem
    startup_stm32h743xx.o(.text) refers to startup_stm32h743xx.o(STACK) for Stack_Mem
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to lto-llvm-1128e5.o(.text) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to lto-llvm-1128e5.o(.text) for osRtxIdleThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to lto-llvm-1128e5.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to lto-llvm-1128e5.o(.rodata) for osRtxUserSVC
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to lto-llvm-1128e5.o(.text) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to lto-llvm-1128e5.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to lto-llvm-1128e5.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to lto-llvm-1128e5.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to lto-llvm-1128e5.o(.text) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32h743xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.data) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.rodata.str1.1) for .L.str.60
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.rodata.cst16) for D1CorePrescTable
    lto-llvm-1128e5.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    lto-llvm-1128e5.o(.text) refers to strcmpv7m_pel.o(.text) for strcmp
    lto-llvm-1128e5.o(.text) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    lto-llvm-1128e5.o(.text) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    lto-llvm-1128e5.o(.text) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    lto-llvm-1128e5.o(.text) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    lto-llvm-1128e5.o(.text) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.bss.noinit) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.rodata) for EventRecorderInfo
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.bss) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.RAM_RTE) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.text) refers to rt_memclr.o(.text) for __aeabi_memclr
    lto-llvm-1128e5.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    lto-llvm-1128e5.o(.text) refers to rtx_delay.o(.text.osDelay) for osDelay
    lto-llvm-1128e5.o(.text) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    lto-llvm-1128e5.o(.text) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    lto-llvm-1128e5.o(.text) refers to lto-llvm-1128e5.o(.bss.os.libspace) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.text) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    lto-llvm-1128e5.o(.ARM.exidx) refers to lto-llvm-1128e5.o(.text) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.rodata.str1.1) for .L.str.3.52
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.bss) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.bss.os) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.bss.os.thread.cb) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.bss.os.thread.stack) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.rodata) refers to lto-llvm-1128e5.o(.bss.noinit) for [Anonymous Symbol]
    lto-llvm-1128e5.o(.data) refers to lto-llvm-1128e5.o(.rodata) for [Anonymous Symbol]
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise


==============================================================================

Removing Unused input sections from the image.

    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelPreInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadRegPtr), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (328 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (70 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (88 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.text.osRtxPostProcess), (116 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing lto-llvm-1128e5.o(.ARM.exidx), (640 bytes).
    Removing lto-llvm-1128e5.o(.ARM.use_no_argv), (4 bytes).

234 unused section(s) (total 5999 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m_pel.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm4f.s           0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    RTE\Device\STM32H743VITx\startup_stm32h743xx.s 0x00000000   Number         0  startup_stm32h743xx.o ABSOLUTE
    UartHandle                               0x00000000   Data         424  lto-llvm-1128e5.o(.data)
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    ld-temp.o                                0x00000000   Number         0  lto-llvm-1128e5.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    [Anonymous Symbol]                       0x00000000   Section        0  lto-llvm-1128e5.o(.data)
    MemoryControlHandle                      0x000001ac   Data          48  lto-llvm-1128e5.o(.data)
    .bss                                     0x00000280   Section       96  libspace.o(.bss)
    zero_mem                                 0x000002e0   Data           4  lto-llvm-1128e5.o(.bss)
    [Anonymous Symbol]                       0x000002e0   Section        0  lto-llvm-1128e5.o(.bss)
    RTE_RoundRobin_GetTick.ticks             0x000002e4   Data           4  lto-llvm-1128e5.o(.bss)
    system_thread_stk                        0x000002e8   Data        1024  lto-llvm-1128e5.o(.bss)
    os_kernel_is_active.os_kernel_active     0x000006e8   Data           1  lto-llvm-1128e5.o(.bss)
    RoundRobinHandle.0                       0x000006ec   Data           1  lto-llvm-1128e5.o(.bss)
    usart_timerfucid                         0x000006ed   Data           1  lto-llvm-1128e5.o(.bss)
    StaticsCPUUsage                          0x000006ee   Data           1  lto-llvm-1128e5.o(.bss)
    SysTimerState                            0x000006ef   Data           1  lto-llvm-1128e5.o(.bss)
    RoundRobinHandle.1                       0x000006f0   Data           4  lto-llvm-1128e5.o(.bss)
    MutexIDStdio                             0x000006f4   Data           4  lto-llvm-1128e5.o(.bss)
    Stdout_Handle.0                          0x000006f8   Data           4  lto-llvm-1128e5.o(.bss)
    ThreadIDSYS                              0x000006fc   Data           4  lto-llvm-1128e5.o(.bss)
    StaticsIdleCnt                           0x00000700   Data           4  lto-llvm-1128e5.o(.bss)
    StaticsIdleCntMax                        0x00000704   Data           4  lto-llvm-1128e5.o(.bss)
    ShellQuene                               0x00000708   Data          24  lto-llvm-1128e5.o(.bss)
    ShellHandle                              0x00000720   Data          48  lto-llvm-1128e5.o(.bss)
    PendST                                   0x00000750   Data           1  os_systick.o(.bss.PendST)
    [Anonymous Symbol]                       0x00000750   Section        0  os_systick.o(.bss.PendST)
    EventBuffer                              0x00000780   Data        1024  lto-llvm-1128e5.o(.bss.noinit)
    [Anonymous Symbol]                       0x00000780   Section        0  lto-llvm-1128e5.o(.bss.noinit)
    EventFilter                              0x00000b80   Data         128  lto-llvm-1128e5.o(.bss.noinit)
    EventStatus                              0x00000c00   Data          36  lto-llvm-1128e5.o(.bss.noinit)
    os_isr_queue                             0x00000c28   Data          64  lto-llvm-1128e5.o(.bss.os)
    [Anonymous Symbol]                       0x00000c28   Section        0  lto-llvm-1128e5.o(.bss.os)
    os_mem                                   0x00000c68   Data        4096  lto-llvm-1128e5.o(.bss.os)
    os_libspace_id                           0x00001c68   Data          16  lto-llvm-1128e5.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x00001c68   Section        0  lto-llvm-1128e5.o(.bss.os.libspace)
    os_libspace                              0x00001c78   Data         480  lto-llvm-1128e5.o(.bss.os.libspace)
    os_idle_thread_cb                        0x00001e58   Data          68  lto-llvm-1128e5.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x00001e58   Section        0  lto-llvm-1128e5.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x00001ea0   Data         256  lto-llvm-1128e5.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x00001ea0   Section        0  lto-llvm-1128e5.o(.bss.os.thread.stack)
    Heap_Mem                                 0x00001fa0   Data         512  startup_stm32h743xx.o(HEAP)
    HEAP                                     0x00001fa0   Section      512  startup_stm32h743xx.o(HEAP)
    Stack_Mem                                0x000021a0   Data        1024  startup_stm32h743xx.o(STACK)
    STACK                                    0x000021a0   Section     1024  startup_stm32h743xx.o(STACK)
    __initial_sp                             0x000025a0   Data           0  startup_stm32h743xx.o(STACK)
    RESET                                    0x08000000   Section      664  startup_stm32h743xx.o(RESET)
    !!!main                                  0x08000298   Section        8  __main.o(!!!main)
    !!!scatter                               0x080002a0   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x080002d4   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x08000310   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800032c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800032e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000332   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000332   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000334   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000336   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000336   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000338   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000338   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000338   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800033e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000346   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800034a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800034a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000352   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000354   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000354   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000358   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08000360   Number         0  startup_stm32h743xx.o(.text)
    .text                                    0x08000360   Section       64  startup_stm32h743xx.o(.text)
    $v0                                      0x080003a0   Number         0  irq_cm4f.o(.text)
    .text                                    0x080003a0   Section      196  irq_cm4f.o(.text)
    .text                                    0x08000464   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080004ee   Section       68  rt_memclr.o(.text)
    .text                                    0x08000532   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000580   Section      124  strcmpv7m_pel.o(.text)
    .text                                    0x080005fc   Section        0  heapauxi.o(.text)
    .text                                    0x08000602   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000666   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080006b0   Section        0  exit.o(.text)
    .text                                    0x080006c4   Section        8  libspace.o(.text)
    .text                                    0x080006cc   Section        0  sys_exit.o(.text)
    .text                                    0x080006d8   Section        2  use_no_semi.o(.text)
    .text                                    0x080006da   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080006dc   Section        0  lto-llvm-1128e5.o(.text)
    RTE_Puts                                 0x080006e9   Thumb Code   144  lto-llvm-1128e5.o(.text)
    __arm_cp.6_0                             0x08000774   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_93                            0x08000b20   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_94                            0x08000b24   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_95                            0x08000b28   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_96                            0x08000b2c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_97                            0x08000b30   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_98                            0x08000b34   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_99                            0x08000b38   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_100                           0x08000b3c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_101                           0x08000b40   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_103                           0x08000b48   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_104                           0x08000b4c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_105                           0x08000b50   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_107                           0x08000b58   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_108                           0x08000b5c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_109                           0x08000b60   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_111                           0x080014b0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_112                           0x080014b4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_115                           0x080014c0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_116                           0x080014c4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_117                           0x080014c8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_118                           0x080014cc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_119                           0x080014d0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_120                           0x080014d4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_121                           0x08001878   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_122                           0x0800187c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_123                           0x08001880   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_124                           0x08001884   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_125                           0x08001888   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_127                           0x08001890   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_128                           0x08001894   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_129                           0x08001898   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_130                           0x0800189c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_131                           0x080018a0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_132                           0x080018a4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_133                           0x080018a8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_9                             0x08001d20   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_16                            0x08001d24   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_17                            0x08001d28   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_21                            0x08001d2c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_23                            0x08001d30   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_26                            0x08001d34   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_27                            0x08001d38   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_28                            0x08001d3c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_30                            0x08001d40   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_31                            0x08001d44   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_32                            0x08001d48   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_34                            0x08001d4c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_36                            0x08001d50   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_38                            0x08001d5c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_40                            0x08001d80   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_42                            0x08001d8c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_44                            0x08001db4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_46                            0x08001dc4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_47                            0x08001dc8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_48                            0x08001dcc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_49                            0x08001dd0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_61                            0x08001dd4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_62                            0x08001dd8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_63                            0x08001ddc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_64                            0x08001de0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_65                            0x08001de4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_66                            0x08001de8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_67                            0x08001dec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_69                            0x08001e00   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.7_70                            0x08001e04   Number         4  lto-llvm-1128e5.o(.text)
    RTE_LOG_ADD                              0x08001e09   Thumb Code   128  lto-llvm-1128e5.o(.text)
    RTE_MEM_Alloc                            0x08001e89   Thumb Code    80  lto-llvm-1128e5.o(.text)
    __arm_cp.9_0                             0x08001ed4   Number         4  lto-llvm-1128e5.o(.text)
    ent_get_next                             0x08001ed9   Thumb Code    56  lto-llvm-1128e5.o(.text)
    __arm_cp.10_0                            0x08001f0c   Number         4  lto-llvm-1128e5.o(.text)
    ent_trunc                                0x08001f11   Thumb Code    80  lto-llvm-1128e5.o(.text)
    RTE_MEM_Alloc0                           0x08001f61   Thumb Code    32  lto-llvm-1128e5.o(.text)
    RTE_MEM_Free                             0x08001f81   Thumb Code    96  lto-llvm-1128e5.o(.text)
    __arm_cp.13_0                            0x08001fd8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.13_1                            0x08001fdc   Number         4  lto-llvm-1128e5.o(.text)
    RTE_RingQuene_Insert                     0x08001fe1   Thumb Code    46  lto-llvm-1128e5.o(.text)
    RTE_RingQuene_Pop                        0x08002011   Thumb Code    52  lto-llvm-1128e5.o(.text)
    __arm_cp.15_0                            0x08002040   Number         4  lto-llvm-1128e5.o(.text)
    RTE_MessageQuene_Init                    0x08002045   Thumb Code    80  lto-llvm-1128e5.o(.text)
    RTE_MessageQuene_In                      0x08002095   Thumb Code   166  lto-llvm-1128e5.o(.text)
    RTE_RoundRobin_CreateTimer               0x0800213d   Thumb Code   196  lto-llvm-1128e5.o(.text)
    __arm_cp.18_0                            0x080021fc   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Shell_AddCommand                     0x08002201   Thumb Code   120  lto-llvm-1128e5.o(.text)
    __arm_cp.19_0                            0x08002274   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Shell_CMD_Help                       0x08002279   Thumb Code   144  lto-llvm-1128e5.o(.text)
    __arm_cp.20_0                            0x080022bc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.20_2                            0x080022dc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.20_3                            0x080022e0   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Shell_CMD_RTEInfor                   0x08002309   Thumb Code   488  lto-llvm-1128e5.o(.text)
    __arm_cp.21_0                            0x0800244c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_1                            0x08002450   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_2                            0x08002454   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_6                            0x080024bc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_7                            0x080024c0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_8                            0x080024c4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_10                           0x080024e4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_11                           0x080024e8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.21_12                           0x080024ec   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Shell_Poll                           0x080024f1   Thumb Code   456  lto-llvm-1128e5.o(.text)
    __arm_cp.22_0                            0x0800264c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.22_2                            0x0800267c   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Printf                               0x080026b9   Thumb Code   728  lto-llvm-1128e5.o(.text)
    __arm_cp.23_0                            0x0800294c   Number         4  lto-llvm-1128e5.o(.text)
    ustrcmp                                  0x08002991   Thumb Code    48  lto-llvm-1128e5.o(.text)
    vec_expand_                              0x080029c1   Thumb Code   168  lto-llvm-1128e5.o(.text)
    __arm_cp.25_0                            0x08002a64   Number         4  lto-llvm-1128e5.o(.text)
    HAL_GetTick                              0x08002a69   Thumb Code    80  lto-llvm-1128e5.o(.text)
    __arm_cp.26_0                            0x08002ab0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.26_1                            0x08002ab4   Number         4  lto-llvm-1128e5.o(.text)
    RTE_Assert                               0x08002ab9   Thumb Code    72  lto-llvm-1128e5.o(.text)
    HAL_UART_RxCpltCallback                  0x08002b01   Thumb Code   136  lto-llvm-1128e5.o(.text)
    __arm_cp.28_0                            0x08002b7c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.28_1                            0x08002b80   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.28_2                            0x08002b84   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_0                            0x08002ddc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_1                            0x08002de0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_2                            0x08002de4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_3                            0x08002de8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_4                            0x08002dec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_5                            0x08002df0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_6                            0x08002df4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.29_7                            0x08002df8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_0                            0x080030d8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_1                            0x080030dc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_2                            0x080030e0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_3                            0x080030e4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_4                            0x080030e8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_5                            0x080030ec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_6                            0x080030f0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.30_7                            0x080030f4   Number         4  lto-llvm-1128e5.o(.text)
    Board_Uart1_MSPInitCallback              0x080030f9   Thumb Code   760  lto-llvm-1128e5.o(.text)
    __arm_cp.31_0                            0x080033a0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_1                            0x080033a4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_2                            0x080033a8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_3                            0x080033ac   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_4                            0x080033b0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_5                            0x080033b4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_6                            0x080033b8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.31_7                            0x080033bc   Number         4  lto-llvm-1128e5.o(.text)
    Board_Uart1_MSPDeInitCallback            0x080033f1   Thumb Code   436  lto-llvm-1128e5.o(.text)
    __arm_cp.32_0                            0x08003584   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_1                            0x08003588   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_2                            0x0800358c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_3                            0x08003590   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_4                            0x08003594   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_5                            0x08003598   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_6                            0x0800359c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.32_7                            0x080035a0   Number         4  lto-llvm-1128e5.o(.text)
    ComTimer_Callback                        0x080035a5   Thumb Code   380  lto-llvm-1128e5.o(.text)
    __arm_cp.33_0                            0x08003714   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.33_1                            0x08003718   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.33_2                            0x0800371c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.34_0                            0x08003738   Number         4  lto-llvm-1128e5.o(.text)
    ThreadTaskSYS                            0x0800373d   Thumb Code   324  lto-llvm-1128e5.o(.text)
    __arm_cp.35_0                            0x08003820   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.35_1                            0x08003824   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.35_3                            0x08003834   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.35_5                            0x08003848   Number         4  lto-llvm-1128e5.o(.text)
    LEDTimer_Callback                        0x08003881   Thumb Code    40  lto-llvm-1128e5.o(.text)
    __arm_cp.36_0                            0x080038a4   Number         4  lto-llvm-1128e5.o(.text)
    SystemStaticsTimer_Callback              0x080038a9   Thumb Code    60  lto-llvm-1128e5.o(.text)
    __arm_cp.37_0                            0x080038dc   Number         4  lto-llvm-1128e5.o(.text)
    __tagsym$$used.0                         0x080038e4   Number         0  lto-llvm-1128e5.o(.text)
    __tagsym$$used.1                         0x080038fe   Number         0  lto-llvm-1128e5.o(.text)
    __tagsym$$used.2                         0x08003904   Number         0  lto-llvm-1128e5.o(.text)
    __tagsym$$used.3                         0x08003924   Number         0  lto-llvm-1128e5.o(.text)
    os_kernel_is_active                      0x0800393d   Thumb Code    36  lto-llvm-1128e5.o(.text)
    __arm_cp.42_0                            0x0800395c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.46_0                            0x080039b0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.46_1                            0x080039b4   Number         4  lto-llvm-1128e5.o(.text)
    SysTimerIsRunning                        0x080039bd   Thumb Code    36  lto-llvm-1128e5.o(.text)
    __arm_cp.48_0                            0x080039dc   Number         4  lto-llvm-1128e5.o(.text)
    EventRecorderEnable                      0x080039e1   Thumb Code    80  lto-llvm-1128e5.o(.text)
    __arm_cp.49_0                            0x08003a2c   Number         4  lto-llvm-1128e5.o(.text)
    EventGetTS                               0x08003a31   Thumb Code    68  lto-llvm-1128e5.o(.text)
    __arm_cp.50_0                            0x08003a70   Number         4  lto-llvm-1128e5.o(.text)
    EventRecordItem                          0x08003a75   Thumb Code   256  lto-llvm-1128e5.o(.text)
    __arm_cp.51_0                            0x08003b6c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.51_1                            0x08003b70   Number         4  lto-llvm-1128e5.o(.text)
    EventRecorderStart                       0x08003b75   Thumb Code    40  lto-llvm-1128e5.o(.text)
    __arm_cp.52_0                            0x08003b94   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.52_1                            0x08003b98   Number         4  lto-llvm-1128e5.o(.text)
    EventRecord2                             0x08003b9d   Thumb Code    88  lto-llvm-1128e5.o(.text)
    __arm_cp.53_0                            0x08003be8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.53_1                            0x08003bec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.53_2                            0x08003bf0   Number         4  lto-llvm-1128e5.o(.text)
    HAL_InitTick                             0x08003bf5   Thumb Code    72  lto-llvm-1128e5.o(.text)
    __arm_cp.54_0                            0x08003c30   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.54_1                            0x08003c34   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.54_2                            0x08003c38   Number         4  lto-llvm-1128e5.o(.text)
    HAL_NVIC_SetPriority                     0x08003c3d   Thumb Code    84  lto-llvm-1128e5.o(.text)
    __arm_cp.55_0                            0x08003c88   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.55_1                            0x08003c8c   Number         4  lto-llvm-1128e5.o(.text)
    HAL_MPU_ConfigRegion                     0x08003c91   Thumb Code    80  lto-llvm-1128e5.o(.text)
    __arm_cp.56_0                            0x08003cdc   Number         4  lto-llvm-1128e5.o(.text)
    DMA_CalcBaseAndBitshift                  0x08003ce1   Thumb Code    52  lto-llvm-1128e5.o(.text)
    DMA_CalcBaseAndBitshift.flagBitshiftOffset 0x08003d0c   Number         0  lto-llvm-1128e5.o(.text)
    DMA_CalcDMAMUXChannelBaseAndMask         0x08003d15   Thumb Code    84  lto-llvm-1128e5.o(.text)
    __arm_cp.58_0                            0x08003d58   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.58_1                            0x08003d5c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.58_2                            0x08003d60   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.58_3                            0x08003d64   Number         4  lto-llvm-1128e5.o(.text)
    DMA_CalcDMAMUXRequestGenBaseAndMask      0x08003d69   Thumb Code    88  lto-llvm-1128e5.o(.text)
    __arm_cp.59_0                            0x08003db4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.59_1                            0x08003db8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.59_2                            0x08003dbc   Number         4  lto-llvm-1128e5.o(.text)
    HAL_DMA_Abort                            0x08003dc1   Thumb Code   216  lto-llvm-1128e5.o(.text)
    __arm_cp.60_0                            0x08003e90   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.60_1                            0x08003e94   Number         4  lto-llvm-1128e5.o(.text)
    HAL_GPIO_Init                            0x08003e99   Thumb Code   396  lto-llvm-1128e5.o(.text)
    __arm_cp.61_0                            0x08004010   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.61_1                            0x08004014   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.61_2                            0x08004018   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.61_3                            0x0800401c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.61_4                            0x08004020   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCC_GetSysClockFreq                  0x08004025   Thumb Code   212  lto-llvm-1128e5.o(.text)
    __arm_cp.62_0                            0x080040e4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.62_1                            0x080040e8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.62_2                            0x080040ec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.62_3                            0x080040f0   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCC_GetHCLKFreq                      0x080040f9   Thumb Code    48  lto-llvm-1128e5.o(.text)
    __arm_cp.63_0                            0x0800411c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.63_1                            0x08004120   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.63_2                            0x08004124   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCC_GetPCLK1Freq                     0x08004129   Thumb Code    32  lto-llvm-1128e5.o(.text)
    __arm_cp.64_0                            0x08004140   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.64_1                            0x08004144   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCC_GetPCLK2Freq                     0x08004149   Thumb Code    32  lto-llvm-1128e5.o(.text)
    __arm_cp.65_0                            0x08004160   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.65_1                            0x08004164   Number         4  lto-llvm-1128e5.o(.text)
    RCCEx_PLL2_Config                        0x08004169   Thumb Code   232  lto-llvm-1128e5.o(.text)
    __arm_cp.66_0                            0x0800424c   Number         4  lto-llvm-1128e5.o(.text)
    RCCEx_PLL3_Config                        0x08004251   Thumb Code   232  lto-llvm-1128e5.o(.text)
    __arm_cp.67_0                            0x08004334   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCCEx_GetPLL2ClockFreq               0x08004339   Thumb Code   224  lto-llvm-1128e5.o(.text)
    __arm_cp.68_0                            0x08004404   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.68_1                            0x08004408   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.68_2                            0x0800440c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.68_3                            0x08004410   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCCEx_GetPLL3ClockFreq               0x08004419   Thumb Code   224  lto-llvm-1128e5.o(.text)
    __arm_cp.69_0                            0x080044e4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.69_1                            0x080044e8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.69_2                            0x080044ec   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.69_3                            0x080044f0   Number         4  lto-llvm-1128e5.o(.text)
    HAL_RCCEx_GetD3PCLK1Freq                 0x080044f9   Thumb Code    32  lto-llvm-1128e5.o(.text)
    __arm_cp.70_0                            0x08004510   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.70_1                            0x08004514   Number         4  lto-llvm-1128e5.o(.text)
    UART_WaitOnFlagUntilTimeout              0x08004519   Thumb Code    96  lto-llvm-1128e5.o(.text)
    __arm_cp.71_0                            0x08004574   Number         4  lto-llvm-1128e5.o(.text)
    UART_DMAError                            0x08004579   Thumb Code    84  lto-llvm-1128e5.o(.text)
    UART_EndRxTransfer                       0x080045cd   Thumb Code    26  lto-llvm-1128e5.o(.text)
    HAL_UART_Receive_DMA                     0x080045e9   Thumb Code   456  lto-llvm-1128e5.o(.text)
    __arm_cp.74_0                            0x08004798   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.74_1                            0x0800479c   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.74_2                            0x080047a0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.74_3                            0x080047a4   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.74_4                            0x080047a8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.74_5                            0x080047ac   Number         4  lto-llvm-1128e5.o(.text)
    UART_DMAReceiveCplt                      0x080047b1   Thumb Code    52  lto-llvm-1128e5.o(.text)
    UART_DMARxHalfCplt                       0x080047e5   Thumb Code     2  lto-llvm-1128e5.o(.text)
    UART_Receive_IT                          0x080047e9   Thumb Code   124  lto-llvm-1128e5.o(.text)
    __arm_cp.77_0                            0x08004860   Number         4  lto-llvm-1128e5.o(.text)
    UART_DMAAbortOnError                     0x08004865   Thumb Code    14  lto-llvm-1128e5.o(.text)
    __arm_cp.79_0                            0x080048c8   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.79_1                            0x080048cc   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.79_2                            0x080048d0   Number         4  lto-llvm-1128e5.o(.text)
    __arm_cp.79_3                            0x080048d4   Number         4  lto-llvm-1128e5.o(.text)
    .text                                    0x080048d8   Section      238  lludivv7m.o(.text)
    [Anonymous Symbol]                       0x080049c8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080049d0   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x080049f0   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x080049f4   Section        0  os_systick.o(.text.OS_Tick_GetClock)
    [Anonymous Symbol]                       0x080049fc   Section        0  os_systick.o(.text.OS_Tick_GetCount)
    [Anonymous Symbol]                       0x08004a08   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08004a10   Section        0  os_systick.o(.text.OS_Tick_GetInterval)
    __arm_cp.6_0                             0x08004a18   Number         4  os_systick.o(.text.OS_Tick_GetInterval)
    [Anonymous Symbol]                       0x08004a1c   Section        0  os_systick.o(.text.OS_Tick_GetOverflow)
    [Anonymous Symbol]                       0x08004a28   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08004a58   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08004a5c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x08004a60   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08004a64   Number         4  os_systick.o(.text.OS_Tick_Setup)
    ThreadFlagsCheck                         0x08004a69   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08004a68   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08004ad4   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08004af4   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08004af8   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x08004b24   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08004b28   Section        0  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    __arm_cp.16_0                            0x08004b48   Number         4  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x08004b4c   Section        0  rtx_kernel.o(.text.osKernelGetSysTimerFreq)
    __arm_cp.18_0                            0x08004b6c   Number         4  rtx_kernel.o(.text.osKernelGetSysTimerFreq)
    [Anonymous Symbol]                       0x08004b70   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.12_0                            0x08004b90   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.12_1                            0x08004b94   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08004b98   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x08004bc0   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08004bc4   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x08004be4   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08004be8   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x08004c08   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08004c0c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x08004c2c   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08004c30   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x08004c50   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08004c54   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x08004c74   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08004c78   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08004cf8   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08004d4a   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08004d80   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08004db8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08004e00   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08004e54   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08004e98   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxThreadBlock                         0x08004f25   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08004f24   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08004f58   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08004f5d   Thumb Code   140  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08004f5c   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08004fe5   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08004fe4   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08005038   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0800506c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x080050c9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x080050c8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0800511c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08005132   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0800515e   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08005172   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x0800519b   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800519a   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x080051c4   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080051d4   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x080051f4   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080051f8   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08005240   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x08005244   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08005248   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08005254   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08005258   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x0800528c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08005290   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x080052c4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08005330   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08005334   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x0800533c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08005340   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x08005360   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_1                            0x08005364   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08005368   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x08005388   Number         4  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x0800538d   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800538c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x080053a1   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x080053a0   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetSysTimerCount             0x080053a9   Thumb Code    40  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x080053a8   Section        0  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    svcRtxKernelGetSysTimerFreq              0x080053cd   Thumb Code     4  rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq)
    [Anonymous Symbol]                       0x080053cc   Section        0  rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq)
    svcRtxKernelGetTickCount                 0x080053d1   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x080053d0   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.13_0                            0x080053d8   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x080053dd   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080053dc   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x08005548   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x0800554c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08005551   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08005550   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x080055cc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x080055d0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x080055d4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x080055d8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMutexAcquire                       0x080055dd   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x080055dc   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x0800566c   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08005671   Thumb Code   196  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08005670   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x08005730   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08005735   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08005734   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x0800579c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080057a1   Thumb Code   180  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080057a0   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08005851   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08005850   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x080058b5   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x080058b4   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.20_0                            0x080058bc   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x080058c1   Thumb Code   476  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080058c0   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x08005a88   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x08005a8c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x08005a90   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x08005a94   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x08005a98   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    $v0                                      0x08005a9c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08005a9c   Section       26  fpinit.o(x$fpl$fpinit)
    RTE_Init.MutexIDStdioAttr                0x08005ab8   Data          16  lto-llvm-1128e5.o(.rodata)
    [Anonymous Symbol]                       0x08005ab8   Section        0  lto-llvm-1128e5.o(.rodata)
    UartDefaultConfig                        0x08005ac8   Data          16  lto-llvm-1128e5.o(.rodata)
    SystemThreadControl                      0x08005ad8   Data          36  lto-llvm-1128e5.o(.rodata)
    __tagsym$$used.4                         0x08005afc   Number         0  lto-llvm-1128e5.o(.rodata)
    os_idle_thread_attr                      0x08005b64   Data          36  lto-llvm-1128e5.o(.rodata)
    __tagsym$$used.5                         0x08005bc4   Number         0  lto-llvm-1128e5.o(.rodata)
    UARTPrescTable                           0x08005bdc   Data          24  lto-llvm-1128e5.o(.rodata)
    D1CorePrescTable                         0x08005bf4   Data          16  lto-llvm-1128e5.o(.rodata.cst16)
    .L.str.14.21                             0x08005c04   Data          88  lto-llvm-1128e5.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005c04   Section        0  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.8.19                              0x08005c5c   Data          53  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.2.11                              0x08005c91   Data          75  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.4.13                              0x08005cdc   Data          95  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.6.20                              0x08005d3b   Data           8  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.3.12                              0x08005d43   Data           5  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.60                                0x08005d48   Data          48  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.2.16                              0x08005d78   Data          30  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.5.82                              0x08005d96   Data          30  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.65                                0x08005db4   Data          45  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.71                                0x08005de1   Data          13  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.1.50                              0x08005dee   Data           9  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.1.66                              0x08005df7   Data           9  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str.3.52                              0x08005e00   Data          11  lto-llvm-1128e5.o(.rodata.str1.1)
    .L.str                                   0x08005e0c   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08005e0c   Section        0  rtx_kernel.o(.rodata.str1.4)
    RTE_RAM                                  0x38000000   Data        8192  lto-llvm-1128e5.o(.RAM_RTE)
    [Anonymous Symbol]                       0x38000000   Section        0  lto-llvm-1128e5.o(.RAM_RTE)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPv5_D16$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$IEEEF$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.msgqueue.cb$$Base                 - Undefined Weak Reference
    .bss.os.msgqueue.cb$$Limit                - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __os_evflags_cb_end__                     - Undefined Weak Reference
    __os_evflags_cb_start__                   - Undefined Weak Reference
    __os_mempool_cb_end__                     - Undefined Weak Reference
    __os_mempool_cb_start__                   - Undefined Weak Reference
    __os_msgqueue_cb_end__                    - Undefined Weak Reference
    __os_msgqueue_cb_start__                  - Undefined Weak Reference
    __os_mutex_cb_end__                       - Undefined Weak Reference
    __os_mutex_cb_start__                     - Undefined Weak Reference
    __os_semaphore_cb_end__                   - Undefined Weak Reference
    __os_semaphore_cb_start__                 - Undefined Weak Reference
    __os_thread_cb_end__                      - Undefined Weak Reference
    __os_thread_cb_start__                    - Undefined Weak Reference
    __os_timer_cb_end__                       - Undefined Weak Reference
    __os_timer_cb_start__                     - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    SystemCoreClock                          0x000001a8   Data           4  lto-llvm-1128e5.o(.data)
    osRtxInfo                                0x000001dc   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x00000280   Data          96  libspace.o(.bss)
    __Vectors_Size                           0x00000298   Number         0  startup_stm32h743xx.o ABSOLUTE
    __temporary_stack_top$libspace           0x000002e0   Data           0  libspace.o(.bss)
    .bss.os.thread.cb$$Base                  0x00001e58   Number         0  lto-llvm-1128e5.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x00001e9c   Number         0  lto-llvm-1128e5.o(.bss.os.thread.cb)
    __Vectors                                0x08000000   Data           4  startup_stm32h743xx.o(RESET)
    __Vectors_End                            0x08000298   Data           0  startup_stm32h743xx.o(RESET)
    __main                                   0x08000299   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080002a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080002a1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080002a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080002af   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080002d5   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x080002d5   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x08000311   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800032d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800032f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000333   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000335   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000337   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000339   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000339   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000339   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800033f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000347   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800034b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800034b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000353   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000355   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000355   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000359   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000361   Thumb Code     8  startup_stm32h743xx.o(.text)
    ADC3_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    ADC_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel0_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel1_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel2_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel3_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel4_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel5_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel6_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    BDMA_Channel7_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    CEC_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    COMP1_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    CRS_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DCMI_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DFSDM1_FLT0_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DFSDM1_FLT1_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DFSDM1_FLT2_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DFSDM1_FLT3_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2D_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMAMUX1_OVR_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    DMAMUX2_OVR_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    ETH_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    ETH_WKUP_IRQHandler                      0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI0_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI15_10_IRQHandler                     0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI1_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI2_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI3_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI4_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    EXTI9_5_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FDCAN1_IT0_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FDCAN1_IT1_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FDCAN2_IT0_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FDCAN2_IT1_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FDCAN_CAL_IRQHandler                     0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FLASH_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FMC_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    FPU_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_FLT_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_Master_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_TIMA_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_TIMB_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_TIMC_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_TIMD_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HRTIM1_TIME_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    HSEM1_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C1_ER_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C1_EV_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C2_ER_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C2_EV_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C3_ER_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C3_EV_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C4_ER_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    I2C4_EV_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    JPEG_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPTIM1_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPTIM2_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPTIM3_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPTIM4_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPTIM5_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LPUART1_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LTDC_ER_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    LTDC_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    MDIOS_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    MDIOS_WKUP_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    MDMA_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_FS_EP1_IN_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_FS_EP1_OUT_IRQHandler                0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_FS_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_HS_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    PVD_AVD_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    QUADSPI_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    RCC_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    RNG_IRQHandler                           0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    RTC_Alarm_IRQHandler                     0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    RTC_WKUP_IRQHandler                      0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SAI1_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SAI2_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SAI3_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SAI4_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SDMMC1_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SDMMC2_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPDIF_RX_IRQHandler                      0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI1_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI2_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI3_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI4_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI5_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SPI6_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    SWPMI1_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM15_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM16_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM17_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM1_BRK_IRQHandler                      0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM1_CC_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM1_UP_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM2_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM3_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM4_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM5_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM6_DAC_IRQHandler                      0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM7_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM8_CC_IRQHandler                       0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    UART4_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    UART5_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    UART7_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    UART8_IRQHandler                         0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    USART2_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    USART3_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    USART6_IRQHandler                        0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    WAKEUP_PIN_IRQHandler                    0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    WWDG_IRQHandler                          0x0800037b   Thumb Code     0  startup_stm32h743xx.o(.text)
    __user_initial_stackheap                 0x0800037d   Thumb Code     0  startup_stm32h743xx.o(.text)
    SVC_Handler                              0x080003a1   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x08000439   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x08000449   Thumb Code    16  irq_cm4f.o(.text)
    __aeabi_memcpy                           0x08000465   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000465   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080004cb   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x080004ef   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080004ef   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080004f3   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000533   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000533   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000533   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08000537   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08000581   Thumb Code   124  strcmpv7m_pel.o(.text)
    __use_two_region_memory                  0x080005fd   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080005ff   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000601   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000603   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000603   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000603   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800064b   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08000667   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080006b1   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080006c5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080006c5   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080006cd   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080006d9   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080006d9   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080006db   Thumb Code     0  indicate_semi.o(.text)
    NMI_Handler                              0x080006dd   Thumb Code     2  lto-llvm-1128e5.o(.text)
    HardFault_Handler                        0x080006df   Thumb Code     2  lto-llvm-1128e5.o(.text)
    MemManage_Handler                        0x080006e1   Thumb Code     2  lto-llvm-1128e5.o(.text)
    BusFault_Handler                         0x080006e3   Thumb Code     2  lto-llvm-1128e5.o(.text)
    UsageFault_Handler                       0x080006e5   Thumb Code     2  lto-llvm-1128e5.o(.text)
    DebugMon_Handler                         0x080006e7   Thumb Code     2  lto-llvm-1128e5.o(.text)
    main                                     0x08000779   Thumb Code  5776  lto-llvm-1128e5.o(.text)
    USART1_IRQHandler                        0x08002b89   Thumb Code   628  lto-llvm-1128e5.o(.text)
    DMA1_Stream0_IRQHandler                  0x08002dfd   Thumb Code   764  lto-llvm-1128e5.o(.text)
    osRtxIdleThread                          0x08003721   Thumb Code    28  lto-llvm-1128e5.o(.text)
    _mutex_acquire                           0x080038e5   Thumb Code    26  lto-llvm-1128e5.o(.text)
    _mutex_free                              0x080038ff   Thumb Code     6  lto-llvm-1128e5.o(.text)
    _mutex_initialize                        0x08003905   Thumb Code    32  lto-llvm-1128e5.o(.text)
    _mutex_release                           0x08003925   Thumb Code    22  lto-llvm-1128e5.o(.text)
    osRtxTimerThread                         0x08003961   Thumb Code     2  lto-llvm-1128e5.o(.text)
    _platform_post_stackheap_init            0x08003963   Thumb Code     4  lto-llvm-1128e5.o(.text)
    osRtxKernelPreInit                       0x08003967   Thumb Code     2  lto-llvm-1128e5.o(.text)
    __user_perthread_libspace                0x08003969   Thumb Code    80  lto-llvm-1128e5.o(.text)
    osRtxErrorNotify                         0x080039b9   Thumb Code     2  lto-llvm-1128e5.o(.text)
    SystemInit                               0x08004875   Thumb Code   100  lto-llvm-1128e5.o(.text)
    __aeabi_uldivmod                         0x080048d9   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x080048d9   Thumb Code   238  lludivv7m.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x080049c9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080049d1   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetClock                         0x080049f5   Thumb Code    12  os_systick.o(.text.OS_Tick_GetClock)
    OS_Tick_GetCount                         0x080049fd   Thumb Code    16  os_systick.o(.text.OS_Tick_GetCount)
    OS_Tick_GetIRQn                          0x08004a09   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_GetInterval                      0x08004a11   Thumb Code    12  os_systick.o(.text.OS_Tick_GetInterval)
    OS_Tick_GetOverflow                      0x08004a1d   Thumb Code    16  os_systick.o(.text.OS_Tick_GetOverflow)
    OS_Tick_Setup                            0x08004a29   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x08004ad5   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08004af9   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetSysTimerCount                 0x08004b29   Thumb Code    36  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    osKernelGetSysTimerFreq                  0x08004b4d   Thumb Code    36  rtx_kernel.o(.text.osKernelGetSysTimerFreq)
    osKernelGetTickCount                     0x08004b71   Thumb Code    40  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08004b99   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08004bc5   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMutexAcquire                           0x08004be9   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08004c0d   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08004c31   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08004c55   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x08004c79   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08004cf9   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08004d4b   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08004d81   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08004db9   Thumb Code    72  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08004e01   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08004e55   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08004e99   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxThreadDelayTick                     0x08005039   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x0800506d   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0800511d   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08005133   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0800515f   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08005173   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x080051c5   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadStackCheck                    0x080051d5   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x080051f9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08005249   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08005259   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08005291   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x080052c5   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osThreadExit                             0x08005335   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x08005341   Thumb Code    40  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08005369   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    _fp_init                                 0x08005a9d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08005ab5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08005ab5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x08005afc   Data         104  lto-llvm-1128e5.o(.rodata)
    osRtxUserSVC                             0x08005b88   Data           4  lto-llvm-1128e5.o(.rodata)
    os_cb_sections                           0x08005b8c   Data          56  lto-llvm-1128e5.o(.rodata)
    EventRecorderInfo                        0x08005bc4   Data          24  lto-llvm-1128e5.o(.rodata)
    Region$$Table$$Base                      0x08005e18   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005e48   Number         0  anon$$obj.o(Region$$Table)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000299

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00008100, Max: 0x00200000, ABSOLUTE, COMPRESSED[0x00005f04])

    Execution Region RW_ITCM (Exec base: 0x00000000, Load base: 0x08005e80, Size: 0x000025a0, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00000040])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   COMPRESSED   0x000001dc   Data   RW          613    .data               lto-llvm-1128e5.o
    0x000001dc   COMPRESSED   0x000000a4   Data   RW          107    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x00000280        -       0x00000060   Zero   RW          474    .bss                c_w.l(libspace.o)
    0x000002e0        -       0x00000470   Zero   RW          609    .bss                lto-llvm-1128e5.o
    0x00000750        -       0x00000001   Zero   RW          422    .bss.PendST         RTX_CM4F.lib(os_systick.o)
    0x00000751   COMPRESSED   0x0000002f   PAD
    0x00000780        -       0x000004a4   Zero   RW          618    .bss.noinit         lto-llvm-1128e5.o
    0x00000c24   COMPRESSED   0x00000004   PAD
    0x00000c28        -       0x00001040   Zero   RW          614    .bss.os             lto-llvm-1128e5.o
    0x00001c68        -       0x000001f0   Zero   RW          617    .bss.os.libspace    lto-llvm-1128e5.o
    0x00001e58        -       0x00000044   Zero   RW          615    .bss.os.thread.cb   lto-llvm-1128e5.o
    0x00001e9c   COMPRESSED   0x00000004   PAD
    0x00001ea0        -       0x00000100   Zero   RW          616    .bss.os.thread.stack  lto-llvm-1128e5.o
    0x00001fa0        -       0x00000200   Zero   RW           42    HEAP                startup_stm32h743xx.o
    0x000021a0        -       0x00000400   Zero   RW           41    STACK               startup_stm32h743xx.o


    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005e48, Max: 0x00200000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000298   Data   RO           43    RESET               startup_stm32h743xx.o
    0x08000298   0x08000298   0x00000008   Code   RO          445  * !!!main             c_w.l(__main.o)
    0x080002a0   0x080002a0   0x00000034   Code   RO          644    !!!scatter          c_w.l(__scatter.o)
    0x080002d4   0x080002d4   0x0000003a   Code   RO          642    !!dczerorl          c_w.l(__dczerorl.o)
    0x0800030e   0x0800030e   0x00000002   PAD
    0x08000310   0x08000310   0x0000001c   Code   RO          646    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800032c   0x0800032c   0x00000002   Code   RO          472    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800032e   0x0800032e   0x00000004   Code   RO          478    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          481    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          484    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          486    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          488    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          491    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          493    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          495    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          497    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          499    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          501    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          503    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          505    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          507    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          509    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          511    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          515    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          517    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          519    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000000   Code   RO          521    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000332   0x08000332   0x00000002   Code   RO          522    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000334   0x08000334   0x00000002   Code   RO          544    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000336   0x08000336   0x00000000   Code   RO          559    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000000   Code   RO          561    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000000   Code   RO          564    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000000   Code   RO          567    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000000   Code   RO          569    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000000   Code   RO          572    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000336   0x08000336   0x00000002   Code   RO          573    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000338   0x08000338   0x00000000   Code   RO          447    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000338   0x08000338   0x00000000   Code   RO          451    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000338   0x08000338   0x00000006   Code   RO          463    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800033e   0x0800033e   0x00000008   Code   RO          452    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000346   0x08000346   0x00000004   Code   RO          454    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800034a   0x0800034a   0x00000000   Code   RO          456    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800034a   0x0800034a   0x00000008   Code   RO          457    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000352   0x08000352   0x00000002   Code   RO          476    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000354   0x08000354   0x00000000   Code   RO          524    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000354   0x08000354   0x00000004   Code   RO          525    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000358   0x08000358   0x00000006   Code   RO          526    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800035e   0x0800035e   0x00000002   PAD
    0x08000360   0x08000360   0x00000040   Code   RO           44    .text               startup_stm32h743xx.o
    0x080003a0   0x080003a0   0x000000c4   Code   RO          310    .text               RTX_CM4F.lib(irq_cm4f.o)
    0x08000464   0x08000464   0x0000008a   Code   RO          435    .text               c_w.l(rt_memcpy_v6.o)
    0x080004ee   0x080004ee   0x00000044   Code   RO          437    .text               c_w.l(rt_memclr.o)
    0x08000532   0x08000532   0x0000004e   Code   RO          439    .text               c_w.l(rt_memclr_w.o)
    0x08000580   0x08000580   0x0000007c   Code   RO          441    .text               c_w.l(strcmpv7m_pel.o)
    0x080005fc   0x080005fc   0x00000006   Code   RO          443    .text               c_w.l(heapauxi.o)
    0x08000602   0x08000602   0x00000064   Code   RO          448    .text               c_w.l(rt_memcpy_w.o)
    0x08000666   0x08000666   0x0000004a   Code   RO          465    .text               c_w.l(sys_stackheap_outer.o)
    0x080006b0   0x080006b0   0x00000012   Code   RO          467    .text               c_w.l(exit.o)
    0x080006c2   0x080006c2   0x00000002   PAD
    0x080006c4   0x080006c4   0x00000008   Code   RO          473    .text               c_w.l(libspace.o)
    0x080006cc   0x080006cc   0x0000000c   Code   RO          534    .text               c_w.l(sys_exit.o)
    0x080006d8   0x080006d8   0x00000002   Code   RO          549    .text               c_w.l(use_no_semi.o)
    0x080006da   0x080006da   0x00000000   Code   RO          551    .text               c_w.l(indicate_semi.o)
    0x080006da   0x080006da   0x00000002   PAD
    0x080006dc   0x080006dc   0x000041fc   Code   RO          606    .text               lto-llvm-1128e5.o
    0x080048d8   0x080048d8   0x000000ee   Code   RO          628    .text               c_w.l(lludivv7m.o)
    0x080049c6   0x080049c6   0x00000002   PAD
    0x080049c8   0x080049c8   0x00000008   Code   RO          410    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x080049d0   0x080049d0   0x00000024   Code   RO          406    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x080049f4   0x080049f4   0x00000008   Code   RO          414    .text.OS_Tick_GetClock  RTX_CM4F.lib(os_systick.o)
    0x080049fc   0x080049fc   0x0000000c   Code   RO          418    .text.OS_Tick_GetCount  RTX_CM4F.lib(os_systick.o)
    0x08004a08   0x08004a08   0x00000006   Code   RO          412    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x08004a0e   0x08004a0e   0x00000002   PAD
    0x08004a10   0x08004a10   0x0000000c   Code   RO          416    .text.OS_Tick_GetInterval  RTX_CM4F.lib(os_systick.o)
    0x08004a1c   0x08004a1c   0x0000000c   Code   RO          420    .text.OS_Tick_GetOverflow  RTX_CM4F.lib(os_systick.o)
    0x08004a28   0x08004a28   0x00000040   Code   RO          404    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x08004a68   0x08004a68   0x0000006a   Code   RO          199    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x08004ad2   0x08004ad2   0x00000002   PAD
    0x08004ad4   0x08004ad4   0x00000024   Code   RO          254    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x08004af8   0x08004af8   0x00000030   Code   RO           60    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08004b28   0x08004b28   0x00000024   Code   RO           84    .text.osKernelGetSysTimerCount  RTX_CM4F.lib(rtx_kernel.o)
    0x08004b4c   0x08004b4c   0x00000024   Code   RO           88    .text.osKernelGetSysTimerFreq  RTX_CM4F.lib(rtx_kernel.o)
    0x08004b70   0x08004b70   0x00000028   Code   RO           76    .text.osKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x08004b98   0x08004b98   0x0000002c   Code   RO           54    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08004bc4   0x08004bc4   0x00000024   Code   RO           64    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08004be8   0x08004be8   0x00000024   Code   RO          279    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08004c0c   0x08004c0c   0x00000024   Code   RO          285    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08004c30   0x08004c30   0x00000024   Code   RO          275    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x08004c54   0x08004c54   0x00000024   Code   RO          281    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08004c78   0x08004c78   0x00000080   Code   RO          317    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x08004cf8   0x08004cf8   0x00000052   Code   RO          319    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x08004d4a   0x08004d4a   0x00000036   Code   RO          315    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x08004d80   0x08004d80   0x00000038   Code   RO          334    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x08004db8   0x08004db8   0x00000048   Code   RO          336    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x08004e00   0x08004e00   0x00000054   Code   RO          332    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x08004e54   0x08004e54   0x00000044   Code   RO          273    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08004e98   0x08004e98   0x0000008c   Code   RO          389    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08004f24   0x08004f24   0x00000038   Code   RO          139    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08004f5c   0x08004f5c   0x00000088   Code   RO          147    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08004fe4   0x08004fe4   0x00000054   Code   RO          143    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08005038   0x08005038   0x00000034   Code   RO          129    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x0800506c   0x0800506c   0x0000005c   Code   RO          137    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x080050c8   0x080050c8   0x00000054   Code   RO          223    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x0800511c   0x0800511c   0x00000016   Code   RO          121    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x08005132   0x08005132   0x0000002c   Code   RO          119    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x0800515e   0x0800515e   0x00000014   Code   RO          125    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08005172   0x08005172   0x00000028   Code   RO          123    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x0800519a   0x0800519a   0x0000002a   Code   RO          197    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x080051c4   0x080051c4   0x00000010   Code   RO          127    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x080051d4   0x080051d4   0x00000024   Code   RO          135    .text.osRtxThreadStackCheck  RTX_CM4F.lib(rtx_thread.o)
    0x080051f8   0x080051f8   0x00000050   Code   RO          149    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x08005248   0x08005248   0x00000010   Code   RO          133    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x08005258   0x08005258   0x00000038   Code   RO          145    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x08005290   0x08005290   0x00000032   Code   RO          141    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x080052c2   0x080052c2   0x00000002   PAD
    0x080052c4   0x080052c4   0x00000070   Code   RO          387    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08005334   0x08005334   0x0000000c   Code   RO          181    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08005340   0x08005340   0x00000028   Code   RO          157    .text.osThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x08005368   0x08005368   0x00000024   Code   RO          153    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x0800538c   0x0800538c   0x00000014   Code   RO          258    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x080053a0   0x080053a0   0x00000008   Code   RO           62    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x080053a8   0x080053a8   0x00000024   Code   RO           86    .text.svcRtxKernelGetSysTimerCount  RTX_CM4F.lib(rtx_kernel.o)
    0x080053cc   0x080053cc   0x00000004   Code   RO           90    .text.svcRtxKernelGetSysTimerFreq  RTX_CM4F.lib(rtx_kernel.o)
    0x080053d0   0x080053d0   0x0000000c   Code   RO           78    .text.svcRtxKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x080053dc   0x080053dc   0x00000174   Code   RO           92    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08005550   0x08005550   0x0000008c   Code   RO           94    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x080055dc   0x080055dc   0x00000094   Code   RO          291    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08005670   0x08005670   0x000000c4   Code   RO          297    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08005734   0x08005734   0x0000006c   Code   RO          287    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x080057a0   0x080057a0   0x000000b0   Code   RO          293    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08005850   0x08005850   0x00000064   Code   RO          227    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x080058b4   0x080058b4   0x0000000c   Code   RO          159    .text.svcRtxThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x080058c0   0x080058c0   0x000001dc   Code   RO          151    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x08005a9c   0x08005a9c   0x0000001a   Code   RO          532    x$fpl$fpinit        fz_wv.l(fpinit.o)
    0x08005ab6   0x08005ab6   0x00000002   PAD
    0x08005ab8   0x08005ab8   0x0000013c   Data   RO          612    .rodata             lto-llvm-1128e5.o
    0x08005bf4   0x08005bf4   0x00000010   Data   RO          619    .rodata.cst16       lto-llvm-1128e5.o
    0x08005c04   0x08005c04   0x00000207   Data   RO          610    .rodata.str1.1      lto-llvm-1128e5.o
    0x08005e0b   0x08005e0b   0x00000001   PAD
    0x08005e0c   0x08005e0c   0x0000000b   Data   RO          106    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x08005e17   0x08005e17   0x00000001   PAD
    0x08005e18   0x08005e18   0x00000030   Data   RO          641    Region$$Table       anon$$obj.o


    Execution Region IRAM_DTCM (Exec base: 0x20000000, Load base: 0x08005ec0, Size: 0x00000000, Max: 0x00020000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region IRAM_AXIM (Exec base: 0x24000000, Load base: 0x08005ec0, Size: 0x00000000, Max: 0x00080000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region IRAM_FBALLOC (Exec base: 0x30000000, Load base: 0x08005ec0, Size: 0x00000000, Max: 0x00040000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region IRAM_JPEG (Exec base: 0x30040000, Load base: 0x08005ec0, Size: 0x00000000, Max: 0x00008000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region IRAM_LIB (Exec base: 0x38000000, Load base: 0x08005ec0, Size: 0x00002000, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00000044])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x38000000   COMPRESSED   0x00002000   Data   RW          611    .RAM_RTE            lto-llvm-1128e5.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

     16892       1842        851       8668       7304     113038   lto-llvm-1128e5.o
        64         26        664          0       1536        868   startup_stm32h743xx.o

    ----------------------------------------------------------------------
     16956       1868       1564       8668       8848     113906   Object Totals
         0          0         48          0          0          0   (incl. Generated)
         0          0          1          0          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        544   irq_cm4f.o
       158         24          0          0          1       3637   os_systick.o
        56          4          0          0          0       3110   rtx_delay.o
       812         56         11        164          0      18879   rtx_kernel.o
       264          0          0          0          0       2733   rtx_memory.o
       212          0          0          0          0      17095   rtx_mempool.o
       840         28          0          0          0      10275   rtx_mutex.o
       252         12          0          0          0       5693   rtx_system.o
      1708         64          0          0          0      34306   rtx_thread.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       238          0          0          0          0        100   lludivv7m.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       124          0          0          0          0         88   strcmpv7m_pel.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      5604        216         12        164        144      97456   Library Totals
        18          0          1          0         47          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      4498        200         11        164          1      96272   RTX_CM4F.lib
      1062         16          0          0         96       1068   c_w.l
        26          0          0          0          0        116   fz_wv.l

    ----------------------------------------------------------------------
      5604        216         12        164        144      97456   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22560       2084       1576       8832       8992     210666   Grand Totals
     22560       2084       1576        132       8992     210666   ELF Image Totals (compressed)
     22560       2084       1576        132          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24136 (  23.57kB)
    Total RW  Size (RW Data + ZI Data)             17824 (  17.41kB)
    Total ROM Size (Code + RO Data + RW Data)      24268 (  23.70kB)

==============================================================================

